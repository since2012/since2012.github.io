(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{116:function(s,e,t){"use strict";t.r(e);var a=t(0),n=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"springboot静态文件处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springboot静态文件处理","aria-hidden":"true"}},[s._v("#")]),s._v(" springboot静态文件处理")]),t("p",[s._v("如果没有使用mvc，把index.html放到static即可访问。")]),t("p",[s._v("如果使用了 "),t("code",[s._v("@EnableWebMvc")]),s._v("  或者 配置了下面类（这里估计自动@EnableWebMvc了）")]),t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),t("br"),t("span",{attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{attrs:{class:"token class-name"}},[s._v("SpringMVCConfig")]),s._v(" "),t("span",{attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{attrs:{class:"token class-name"}},[s._v("WebMvcConfigurerAdapter")]),s._v(" "),t("br")])]),t("p",[s._v("静态资源定位于 "),t("code",[s._v("src/main/webapp")]),s._v("，需要把文件放在这里。")]),t("p",[s._v("其实官方解释没有提及一点，就是不能使用@EnableWebMvc，当然如果Spring Boot在classpath里看到有 spring webmvc 也会自动添加@EnableWebMvc (http://spring.io/guides/gs/rest-service/)")]),t("p",[s._v("如果@EnableWebMvc了，那么就会自动覆盖了官方给出的/static, /public, META-INF/resources, /resources等存放静态资源的目录。而将静态资源定位于src/main/webapp。当需要重新定义好资源所在目录时，则需要主动添加上述的那个配置类，来Override addResourceHandlers方法。")])])}],!1,null,null,null);e.default=n.exports}}]);